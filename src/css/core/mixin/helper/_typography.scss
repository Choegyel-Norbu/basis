//
// Return px and rem font-sizes
//
// @param  rem|px  $font-size
//
@mixin bs-font-size($font-size) {
  $unit: unit($font-size);
  @if ($unit == 'px') {
    font-size: $font-size;
    font-size: _px2rem($font-size);
  } @elseif ($unit == 'rem') {
    font-size: _rem2px($font-size);
    font-size: $font-size;
  } @else {
    font-size: $font-size;
  }
}

//
// Return line height ( px ) for vertical rhythum
//
// @param   px   $font-size
// @param   int  $coefficient
// @return  int
//
@function bs-vertical-rhythm($font-size, $coefficient: 1) {
  $between-lines   : _strip-unit(_rem2px($_between-lines));
  $base-line-height: _strip-unit(_rem2px($_base-line-height));
  $base-font-size  : _strip-unit(_rem2px($_base-font-size));
  $font-size       : _strip-unit($font-size);

  $line-height: $font-size + ($between-lines * $coefficient);

  @if ($line-height < $font-size + ($between-lines * 2)) {
    @return bs-vertical-rhythm($font-size, ($coefficient + 1));
  } @else {
    @if ($font-size % $base-font-size == 0 and $font-size > $base-font-size) {
      @return $line-height - ($between-lines / 2);
    }
    @return $line-height;
  }
}

//
// Return line-height for vertical rhythum
//
// @param  rem|px  $font-size  font size
//
@mixin bs-line-height($font-size) {
  $unit: unit($font-size);
  $px: $font-size;
  @if ($unit == 'rem') {
    $px: _rem2px($font-size);
  }
  line-height: bs-vertical-rhythm($px) / _strip-unit($px);
}

//
// Return px and rem font-sizes and line-height for vertical rhythum
//
// @param  rem|px  $font-size
//
// h1 {
//     @include bs-font-size-line-height(1.5rem);
// }
//
@mixin bs-font-size-line-height($font-size) {
  $unit: unit($font-size);
  $rem: $font-size;
  @if ($unit == 'px') {
    $rem: _px2rem($font-size);
  }
  @include bs-font-size($rem);
  @include bs-line-height($rem);
}
